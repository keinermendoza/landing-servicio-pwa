---

interface Props {
    title: string
    headerId: string,
    contentId:string
}

const {title, headerId, contentId} = Astro.props;
---
<>

<h2 id={headerId}>
    <button 
        type="button" 
        class="h3 transition-colors  cursor-pointer flex items-center justify-between w-full p-5 font-medium rtl:text-right text-gray-900 border border-b-0 border-black rounded-t-xl focus:ring-4 focus:ring-gray-200 hover:text-white  hover:bg-blue-500 gap-3" 
        data-accordion-target={`#${contentId}`} 
        aria-controls={contentId}>
      <span class="flex items-center"><svg class="w-5 h-5 me-2 shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path></svg> {title}</span>
      <svg data-accordion-icon class="w-3 h-3 rotate-180 shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5 5 1 1 5"/>
      </svg>
    </button>
  </h2>
  <div id={contentId} class="hidden" aria-labelledby={headerId}>
    <div class="bg-white space-y-2 p-5 text-gray-800 border border-b-0 border-black">
        <slot/>
    </div>
  </div>
</>